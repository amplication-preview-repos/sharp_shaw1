/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StudyMaterial as PrismaStudyMaterial,
  Course as PrismaCourse,
} from "@prisma/client";

export class StudyMaterialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StudyMaterialCountArgs, "select">
  ): Promise<number> {
    return this.prisma.studyMaterial.count(args);
  }

  async studyMaterials(
    args: Prisma.StudyMaterialFindManyArgs
  ): Promise<PrismaStudyMaterial[]> {
    return this.prisma.studyMaterial.findMany(args);
  }
  async studyMaterial(
    args: Prisma.StudyMaterialFindUniqueArgs
  ): Promise<PrismaStudyMaterial | null> {
    return this.prisma.studyMaterial.findUnique(args);
  }
  async createStudyMaterial(
    args: Prisma.StudyMaterialCreateArgs
  ): Promise<PrismaStudyMaterial> {
    return this.prisma.studyMaterial.create(args);
  }
  async updateStudyMaterial(
    args: Prisma.StudyMaterialUpdateArgs
  ): Promise<PrismaStudyMaterial> {
    return this.prisma.studyMaterial.update(args);
  }
  async deleteStudyMaterial(
    args: Prisma.StudyMaterialDeleteArgs
  ): Promise<PrismaStudyMaterial> {
    return this.prisma.studyMaterial.delete(args);
  }

  async findCourses(
    parentId: string,
    args: Prisma.CourseFindManyArgs
  ): Promise<PrismaCourse[]> {
    return this.prisma.studyMaterial
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .courses(args);
  }

  async getCourse(parentId: string): Promise<PrismaCourse | null> {
    return this.prisma.studyMaterial
      .findUnique({
        where: { id: parentId },
      })
      .course();
  }
}
